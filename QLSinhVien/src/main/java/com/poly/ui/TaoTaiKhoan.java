/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.poly.ui;

import com.poly.dao.TaiKhoanDAO;
import com.poly.entity.TaiKhoan;
import com.poly.utils.Auth;
import com.poly.utils.MsgBox;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.Iterator;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;


/**
 *
 * @author admin
 */
public class TaoTaiKhoan extends javax.swing.JPanel {

    /**
     * Creates new form TaoTaiKhoan
     */
    public TaoTaiKhoan() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        txtTenDangNhap = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtTenDN = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JPasswordField();
        rdoGiangVien = new javax.swing.JRadioButton();
        rdoCanBoDaoTao = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtXacNhanMatKhau = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        rdoSinhVien = new javax.swing.JRadioButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaoTaiKhoan = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        btnExcel = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tabs.setBackground(new java.awt.Color(255, 255, 255));

        txtTenDangNhap.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Tên Đăng Nhập: ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Mật Khẩu: ");

        buttonGroup1.add(rdoGiangVien);
        rdoGiangVien.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        rdoGiangVien.setSelected(true);
        rdoGiangVien.setText("Giảng Viên");

        buttonGroup1.add(rdoCanBoDaoTao);
        rdoCanBoDaoTao.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        rdoCanBoDaoTao.setText("Cán Bộ Đào Tạo");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Vai Trò: ");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Xác Nhận Mật Khẩu:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Email: ");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/plus-thick.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/draw-pen.png"))); // NOI18N
        btnSua.setText("Sữa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setBackground(new java.awt.Color(255, 255, 255));
        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/autorenew.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThem)
                .addGap(18, 18, 18)
                .addComponent(btnSua)
                .addGap(18, 18, 18)
                .addComponent(btnXoa)
                .addGap(18, 18, 18)
                .addComponent(btnMoi)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        buttonGroup1.add(rdoSinhVien);
        rdoSinhVien.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        rdoSinhVien.setText("Sinh Viên");

        btnFirst.setBackground(new java.awt.Color(255, 255, 255));
        btnFirst.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(255, 255, 255));
        btnPrev.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(255, 255, 255));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(255, 255, 255));
        btnLast.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout txtTenDangNhapLayout = new javax.swing.GroupLayout(txtTenDangNhap);
        txtTenDangNhap.setLayout(txtTenDangNhapLayout);
        txtTenDangNhapLayout.setHorizontalGroup(
            txtTenDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtTenDangNhapLayout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addGroup(txtTenDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(txtTenDangNhapLayout.createSequentialGroup()
                        .addGroup(txtTenDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(txtTenDN)
                            .addComponent(txtXacNhanMatKhau)
                            .addComponent(jLabel3)
                            .addComponent(txtMatKhau)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(txtTenDangNhapLayout.createSequentialGroup()
                        .addComponent(rdoGiangVien)
                        .addGap(18, 18, 18)
                        .addComponent(rdoCanBoDaoTao)
                        .addGap(18, 18, 18)
                        .addComponent(rdoSinhVien)))
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txtTenDangNhapLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );
        txtTenDangNhapLayout.setVerticalGroup(
            txtTenDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtTenDangNhapLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(txtTenDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txtTenDangNhapLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txtTenDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoGiangVien)
                            .addComponent(rdoCanBoDaoTao)
                            .addComponent(rdoSinhVien)))
                    .addGroup(txtTenDangNhapLayout.createSequentialGroup()
                        .addComponent(txtTenDN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtXacNhanMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(txtTenDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnLast))
                .addContainerGap())
        );

        tabs.addTab("Cập Nhật", txtTenDangNhap);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tblTaoTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên Đăng Nhập", "Mật Khẩu", "Vai Trò", "Email"
            }
        ));
        tblTaoTaiKhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblTaoTaiKhoanMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblTaoTaiKhoan);

        txtTimKiem.setForeground(new java.awt.Color(57, 113, 177));
        txtTimKiem.setBorder(null);
        txtTimKiem.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemCaretUpdate(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/magnify.png"))); // NOI18N

        btnExcel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/microsoft-excel.png"))); // NOI18N
        btnExcel.setText("Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcel)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("Danh Sách", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        this.NhapMoi();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void tblTaoTaiKhoanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTaoTaiKhoanMousePressed
        if (evt.getClickCount() == 2) {
            this.row = tblTaoTaiKhoan.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblTaoTaiKhoanMousePressed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void txtTimKiemCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemCaretUpdate
        timKiem();
    }//GEN-LAST:event_txtTimKiemCaretUpdate

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        this.XExcel();
    }//GEN-LAST:event_btnExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton rdoCanBoDaoTao;
    private javax.swing.JRadioButton rdoGiangVien;
    private javax.swing.JRadioButton rdoSinhVien;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblTaoTaiKhoan;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTenDN;
    private javax.swing.JPanel txtTenDangNhap;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JPasswordField txtXacNhanMatKhau;
    // End of variables declaration//GEN-END:variables

    TaiKhoanDAO dao = new TaiKhoanDAO();
    int row = -1;

    void init() {
//        this.setLocationRelativeTo(null);
        this.fillTable();
        this.row = -1;
        this.updateStatus();
        
        if(!Auth.isManager()){
            btnThem.setEnabled(false);
            btnSua.setEnabled(false);
            btnXoa.setEnabled(false);
            btnMoi.setEnabled(false);
        }
    }

    void insert() {
        TaiKhoan nv = getForm();
        String xnmk = new String(txtXacNhanMatKhau.getPassword());
        if(CheckForm() && checkTenDN()){
            if (!xnmk.equals(nv.getMatKhau())) {
            MsgBox.alert(this, "Xác nhận mật khẩu không đúng");
        } else {
            try {
                dao.insert(nv);
                this.fillTable();
//                this.NhapMoi();
                MsgBox.alert(this, "Insert thành công");
                if (JOptionPane.showConfirmDialog(this, "Gửi TK và MK đi?") == JOptionPane.OK_OPTION) {
                    guiEmail();
                }
            } catch (Exception e) {
                MsgBox.alert(this, "Insert thất bại");
                e.printStackTrace();
            }
        }
        }
        
    }

    void update() {
        TaiKhoan tk = getForm();
        String xnmk = new String(txtXacNhanMatKhau.getPassword());
        if (!xnmk.equals(tk.getMatKhau())) {
            MsgBox.alert(this, "Xác nhận mật khẩu không đúng");
        } else {
            try {
                dao.update(tk);
                this.fillTable();
                MsgBox.alert(this, "Update thành công");
            } catch (Exception e) {
                MsgBox.alert(this, "Update thất bại");
            }
        }
    }

    void delete() {
//        if (!Auth.isManager()) {
//            MsgBox.alert(this, "Bạn không có quyền xóa nhân viên");
//        } else {
//            String manv = txtMaNV.getText();
//            if (manv.equals(Auth.user.getMaNV())) {
//                MsgBox.alert(this, "Bạn không được xóa chính bạn");
//            } else 

        String ma = txtTenDN.getText();
        if (MsgBox.confirm(this, "Bạn chắc chắn xóa?")) {
            try {
                dao.delete(ma);
                this.fillTable();
                this.NhapMoi();
                MsgBox.alert(this, "Delete thành công");
            } catch (Exception e) {
                MsgBox.alert(this, "Delete thất bại");
            }
        }
//        }
    }

    void clearForm() {
        TaiKhoan tk = new TaiKhoan();
//        nv.setVaiTro(false);
        this.setForm(tk);
        this.row = -1;
        this.updateStatus();
    }

    void edit() {
        String ma = (String) tblTaoTaiKhoan.getValueAt(this.row, 0);
        TaiKhoan tk = dao.selectById(ma);
        this.setForm(tk);
        tabs.setSelectedIndex(0);
        this.updateStatus();
    }

    void first() {
        this.row = 0;
        this.edit();
    }

    void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
    }

    void next() {
        if (this.row < tblTaoTaiKhoan.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
    }

    void last() {
        this.row = tblTaoTaiKhoan.getRowCount() - 1;
        this.edit();
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblTaoTaiKhoan.getModel();
        model.setRowCount(0);//Xoa tat ca cac hang tren JTable
        try {
            List<TaiKhoan> list = dao.selectAll();
            
            for (TaiKhoan tk : list) {
                String mk = tk.getMatKhau();
                String mksao = "";
                for(int i = 0; i<=mk.length();i++){
                    mksao +="*";
                }
                
                Object[] row = {
                    tk.getTenDangNhap(),
//                    tk.getMatKhau(),
                    mksao,
                    tk.getEmail(),
                    tk.getVaiTro(),};
                model.addRow(row);//Them mot hang vao Jtable
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    void setForm(TaiKhoan tk) {
        txtTenDN.setText(tk.getTenDangNhap());
        txtMatKhau.setText(tk.getMatKhau());
        txtXacNhanMatKhau.setText(tk.getMatKhau());
        txtEmail.setText(tk.getEmail());
        if (tk.getVaiTro().equals("Giang Vien")) {
            rdoGiangVien.setSelected(true);
        } else if (tk.getVaiTro().equals("Can Bo Dao Tao")) {
            rdoCanBoDaoTao.setSelected(true);
        } else {
            rdoSinhVien.setSelected(true);
        }
    }

    TaiKhoan getForm() {
        TaiKhoan tk = new TaiKhoan();
        tk.setTenDangNhap(txtTenDN.getText());
        tk.setMatKhau(txtMatKhau.getText());
        tk.setEmail(new String(txtEmail.getText()));
        if (rdoGiangVien.isSelected() == true) {
            tk.setVaiTro("Giang Vien");
        } else if (rdoCanBoDaoTao.isSelected() == true) {
            tk.setVaiTro("Can Bo Dao Tao");
        } else {
            tk.setVaiTro("Sinh Vien");
        }

        return tk;
    }

    void updateStatus() {
//        boolean edit = (this.row >= 0);
//        boolean first = (this.row == 0);
//        boolean last = (this.row == tblTaoTaiKhoan.getRowCount() - 1);
//        //Trang thai from
//        txtMaNV.setEditable(!edit);
//        btnThem.setEnabled(!edit);
//        btnSua.setEnabled(edit);
//        btnXoa.setEnabled(edit);
//        // Trang thai dieu huong
//        btnFirst.setEnabled(edit && !first);
//        btnPrev.setEnabled(edit && !first);
//        btnNext.setEnabled(edit && !last);
//        btnLast.setEnabled(edit && !last);
    }

    void NhapMoi() {
        txtTenDN.setText("");
        txtMatKhau.setText("");
        txtXacNhanMatKhau.setText("");
        txtEmail.setText("");

        rdoGiangVien.setSelected(true);
    }

    void XExcel() {
        TaiKhoanDAO dao = new TaiKhoanDAO();
        List<TaiKhoan> list = dao.selectAll();
        try {
            XSSFWorkbook workBook = new XSSFWorkbook();
            XSSFSheet sheet = workBook.createSheet("DanhSachTaiKhoan");
            XSSFRow xRow = null;
            Cell cell = null;
            xRow = sheet.createRow(3);
            cell = xRow.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = xRow.createCell(1, CellType.STRING);
            cell.setCellValue("Tên Đăng Nhập");

            cell = xRow.createCell(2, CellType.STRING);
            cell.setCellValue("Mật Khẩu");

            cell = xRow.createCell(3, CellType.STRING);
            cell.setCellValue("Vai Trò");

            cell = xRow.createCell(4, CellType.STRING);
            cell.setCellValue("Email");

            for (int i = 0; i < list.size(); i++) {
                xRow = sheet.createRow(4 + i);

                cell = xRow.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = xRow.createCell(1, CellType.STRING);
                cell.setCellValue(list.get(i).getTenDangNhap());

                cell = xRow.createCell(2, CellType.STRING);
                cell.setCellValue(list.get(i).getMatKhau());

                cell = xRow.createCell(3, CellType.STRING);
                cell.setCellValue(list.get(i).getVaiTro());

                cell = xRow.createCell(4, CellType.STRING);
                cell.setCellValue(list.get(i).getEmail());
                
                createHeaderRow(sheet);
                autoSizeColumns(workBook);

            }

            File f = new File("D://DanhSachTaiKhoan.xlsx");
            try {
                FileOutputStream fis = new FileOutputStream(f);
                workBook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            MsgBox.alert(this, "Đã xuất file thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Error: ");
        }
    }

    ;    
    
    private void createHeaderRow(Sheet sheet) {
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        Font font = sheet.getWorkbook().createFont();
        font.setBold(true);
        font.setFontHeightInPoints((short) 13);
        short cl = 10;
        font.setColor(cl);
        cellStyle.setFont(font);

        Row row = sheet.getRow(3);
        Cell cellTitle1 = row.getCell(0);
        cellTitle1.setCellStyle(cellStyle);

        Cell cellTitle2 = row.getCell(1);
        cellTitle2.setCellStyle(cellStyle);

        Cell cellTitle3 = row.getCell(2);
        cellTitle3.setCellStyle(cellStyle);

        Cell cellTitle4 = row.getCell(3);
        cellTitle4.setCellStyle(cellStyle);
        
        Cell cellTitle5 = row.getCell(4);
        cellTitle5.setCellStyle(cellStyle);
}
    
    public void autoSizeColumns(Workbook workbook) {
        int numberOfSheets = workbook.getNumberOfSheets();
        for (int i = 0; i < numberOfSheets; i++) {
            Sheet sheet = workbook.getSheetAt(i);
            if (sheet.getPhysicalNumberOfRows() > 0) {
                Row row = sheet.getRow(sheet.getFirstRowNum());
                Iterator<Cell> cellIterator = row.cellIterator();
                while (cellIterator.hasNext()) {
                    Cell cell = cellIterator.next();
                    int columnIndex = cell.getColumnIndex();
                    sheet.autoSizeColumn(columnIndex);
                    int currentColumnWidth = sheet.getColumnWidth(columnIndex);
                    sheet.setColumnWidth(columnIndex, (currentColumnWidth + 600));
                }
            }
        }
    }
    
    void load() {
        DefaultTableModel model = (DefaultTableModel) tblTaoTaiKhoan.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();
            List<TaiKhoan> list = dao.selectByKeyword(keyword);
            for (TaiKhoan tk : list) {
                Object[] row = {
                    tk.getTenDangNhap(),
                    tk.getMatKhau(),
                    tk.getEmail(),
                    tk.getVaiTro(),};
                model.addRow(row);
            };
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu người học!");
            e.printStackTrace();
        }
    }

    void timKiem() {
        this.load();
    }

//    String url = "jdbc:sqlserver://localhost;DatabaseName=QLSV;user=sa; password=songlong";
//    private void guiEmail(String t) throws HeadlessException {
//        try {
//            Properties p = new Properties();
//            p.put("mail.smtp.auth", "true");
//            p.put("mail.smtp.starttls.enable", "true");
//            p.put("mail.smtp.host", "smtp.gmail.com");
//            p.put("mail.smtp.port", 587);
//            String accountName = "thangtqps15783@fpt.edu.vn";
//            String accountPassword = "0375273901";
//            Session s = Session.getInstance(p,
//                    new javax.mail.Authenticator() {
//                protected PasswordAuthentication getPasswordAuthentication() {
//                    return new PasswordAuthentication(accountName, accountPassword);
//                }
//            });
//
//            String from = "thangtqps15783@fpt.edu.vn";
//            String to = t;
//            String subject = "Mat Khau Moi Cua Ban La: ";
//            
//            String tkk = txtTenDN.getText();
//            String mk = txtMatKhau.getText();
//                
//            String noidung = "Tài Khoản: " + tkk + " " + "Mật Khẩu: " + mk;
//            
//            String body = noidung;
//            Message msg = new MimeMessage(s);
//            msg.setFrom(new InternetAddress(from));
//            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
//            msg.setSubject(subject);
//            msg.setText(body);
//            Transport.send(msg);
//
////            String sql = "update TaiKhoan set MatKhau = ? " + " where Email = ?";
//            Connection conn = null;
//            PreparedStatement ps = null;
//            try {
//                conn = DriverManager.getConnection(url);
////                ps = conn.prepareStatement(sql);
//                ps.setString(1, noidung);
//                ps.setString(2, to);
//                ps.execute();
//            } catch (Exception e) {
//                e.printStackTrace();
//            } finally {
//                try {
//                    if (conn != null) {
//                        conn.close();
//                    }
//
//                    if (ps != null) {
//                        ps.close();
//                    }
//                } catch (Exception e2) {
//                    e2.printStackTrace();
//                }
//            }
//            JOptionPane.showMessageDialog(null, "Gui Thanh Cong", "Message",
//                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
//        } catch (MessagingException ex) {
////                        Logger.getLogger(SendMail.class.getName()).log(Level.SEVERE, null, ex);
//            MsgBox.alert(this, "Lỗi gửi Email ");
//            ex.printStackTrace();
//        }
//    }
    private void guiEmail() {
        try {
            
//            TaiKhoan tk = dao.selectById(txtTenDN.getText());
//
//            if (tk != null) {
                String em = txtEmail.getText();

                Properties p = new Properties();
                p.put("mail.smtp.auth", "true");
                p.put("mail.smtp.starttls.enable", "true");
                p.put("mail.smtp.host", "smtp.gmail.com");
                p.put("mail.smtp.port", 587);
                String accountName = "thangtqps15783@fpt.edu.vn";
                String accountPassword = "0375273901";
                Session s = Session.getInstance(p,
                        new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(accountName, accountPassword);
                    }
                });

                String from = "thangtqps15783@fpt.edu.vn";
                String to = em;
                String subject = "Tai Khoan Va Mat Khau Cua Ban Dung De Dang Nhap Vao He Thong Cua Truong: ";

                String tkk = txtTenDN.getText();
                String mk = txtMatKhau.getText();
                

                String body = "Tai Khoan: " + tkk + "\n" + "Mat Khau: " + mk;
                Message msg = new MimeMessage(s);
                msg.setFrom(new InternetAddress(from));
                msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
                msg.setSubject(subject);
                msg.setText(body);
                Transport.send(msg);
                JOptionPane.showMessageDialog(this, "Gui thanh cong");
//            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gui That Bai");
            e.printStackTrace();
        }
    }
    
    boolean CheckForm(){
        String tendncf=txtTenDN.getText();
        String vt;
        if(rdoCanBoDaoTao.isSelected()){
            vt="Cán bộ đào tạo";
        }else if(rdoGiangVien.isSelected()){
            vt="giảng viên";
        }else{
            vt="Sinh viên";
        }
        if(txtTenDN.getText().equals("") ){
            MsgBox.alert(this, "Không được để trống tên đăng nhập");
            return false;
        }
        if(txtMatKhau.getText().equals("") ){
            MsgBox.alert(this, "Không được để trống mật khẩu");
            return false;
        }
        if(txtXacNhanMatKhau.getText().equals("") ){
            MsgBox.alert(this, "Không được để trống xác nhận mật khẩu");
            return false;
        }
        if(txtEmail.getText().equals("") ){
            MsgBox.alert(this, "Không được để trống email");
            return false;
        }
        if(MsgBox.confirm(this, "Bạn muốn tạo tài khoản ' "+tendncf+" ' với quyền -> "
                + vt+" ?") ){
            return true;
        }
        return false;
    }
    
    boolean checkTenDN() {
        List<TaiKhoan> listtdn = dao.selectAll();
        for (TaiKhoan tdn : listtdn) {
            if (tdn.getTenDangNhap().equals(txtTenDN.getText())) {
                MsgBox.alert(this, "Tên đăng nhập này đã tồn tại");
                return false;
            }
        }
        return true;
}
}
