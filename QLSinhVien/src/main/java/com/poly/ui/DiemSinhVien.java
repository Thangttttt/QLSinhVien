/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.poly.ui;

import com.poly.dao.KetQuaDAO;
import com.poly.dao.KhoaDAO;
import com.poly.dao.LopDAO;
import com.poly.dao.MonHocDAO;
import com.poly.dao.SinhVienDAO;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import com.poly.entity.Khoa;
import com.poly.entity.MonHoc;
import com.poly.entity.Lop;
import com.poly.utils.MsgBox;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import com.poly.entity.KetQua;
import com.poly.entity.SinhVien;
import com.poly.utils.Auth;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import org.apache.poi.ss.usermodel.Font;
import java.io.IOException;
import java.util.Iterator;
import java.util.Iterator;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author admin
 */
public class DiemSinhVien extends javax.swing.JPanel {

    /**
     * Creates new form DiemSinhVien
     */
    public DiemSinhVien() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboHocKi = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cboMonHoc = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtHovaTen = new javax.swing.JTextField();
        txtDiemThi = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDiemTB = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        btnThem2 = new javax.swing.JButton();
        btnSua2 = new javax.swing.JButton();
        btnXoa2 = new javax.swing.JButton();
        btnMoi2 = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        txtLop = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cboKhoa = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDiemSV = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        txtTimKiem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnExcel = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Lớp:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Học Kì:");

        cboHocKi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Môn Học:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Mã Sinh Viên:");

        txtMaSV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaSVFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Họ Và Tên:");

        txtHovaTen.setEditable(false);

        txtDiemThi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDiemThiFocusLost(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Điểm Thi:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Điểm TB:");

        txtDiemTB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDiemTBFocusLost(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Ghi Chú:");

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane2.setViewportView(txtGhiChu);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnThem2.setBackground(new java.awt.Color(255, 255, 255));
        btnThem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/plus-thick.png"))); // NOI18N
        btnThem2.setText("Thêm");
        btnThem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem2ActionPerformed(evt);
            }
        });

        btnSua2.setBackground(new java.awt.Color(255, 255, 255));
        btnSua2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/draw-pen.png"))); // NOI18N
        btnSua2.setText("Sữa");
        btnSua2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua2ActionPerformed(evt);
            }
        });

        btnXoa2.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/delete.png"))); // NOI18N
        btnXoa2.setText("Xóa");
        btnXoa2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa2ActionPerformed(evt);
            }
        });

        btnMoi2.setBackground(new java.awt.Color(255, 255, 255));
        btnMoi2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/autorenew.png"))); // NOI18N
        btnMoi2.setText("Mới");
        btnMoi2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoi2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSua2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMoi2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThem2)
                .addGap(18, 18, 18)
                .addComponent(btnSua2)
                .addGap(18, 18, 18)
                .addComponent(btnXoa2)
                .addGap(18, 18, 18)
                .addComponent(btnMoi2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnFirst.setBackground(new java.awt.Color(255, 255, 255));
        btnFirst.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(255, 255, 255));
        btnPrev.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(255, 255, 255));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(255, 255, 255));
        btnLast.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        txtLop.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Khoa:");

        cboKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtHovaTen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(txtMaSV, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addComponent(jLabel11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(txtLop))
                    .addComponent(jLabel13)
                    .addComponent(cboKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(cboMonHoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboHocKi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDiemThi, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtDiemTB, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiemTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboHocKi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDiemThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtHovaTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFirst)
                        .addComponent(btnPrev)
                        .addComponent(btnNext)
                        .addComponent(btnLast)))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        tabs.addTab("Cập Nhật", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tblDiemSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sinh Viên", "Họ và Tên", "Mã Lớp", "Mã Môn Học", "Học Kì", "Điểm Thi", "Điểm Trung Bình", "Ghi Chú "
            }
        ));
        tblDiemSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDiemSVMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblDiemSV);

        txtTimKiem.setForeground(new java.awt.Color(57, 113, 177));
        txtTimKiem.setBorder(null);
        txtTimKiem.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemCaretUpdate(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/magnify.png"))); // NOI18N

        btnExcel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icons/microsoft-excel.png"))); // NOI18N
        btnExcel.setText("Excel");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addComponent(btnExcel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(btnExcel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Danh Sách", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem2ActionPerformed
        this.insert();
    }//GEN-LAST:event_btnThem2ActionPerformed

    private void btnSua2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua2ActionPerformed
        this.update();
    }//GEN-LAST:event_btnSua2ActionPerformed

    private void btnXoa2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa2ActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoa2ActionPerformed

    private void btnMoi2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoi2ActionPerformed
        this.clearfrom();
    }//GEN-LAST:event_btnMoi2ActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        this.prev();
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void tblDiemSVMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiemSVMousePressed
        if (evt.getClickCount() == 2) {
            this.row = tblDiemSV.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblDiemSVMousePressed

    private void txtMaSVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaSVFocusLost
        this.HienThi();
    }//GEN-LAST:event_txtMaSVFocusLost

    private void cboKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaActionPerformed
        this.fillComboBoxMonHoc();
    }//GEN-LAST:event_cboKhoaActionPerformed

    private void txtDiemThiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiemThiFocusLost
//        this.XepLoai();
    }//GEN-LAST:event_txtDiemThiFocusLost

    private void txtDiemTBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiemTBFocusLost
//        this.XepLoai();
    }//GEN-LAST:event_txtDiemTBFocusLost

    private void txtTimKiemCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemCaretUpdate
        timKiem();
    }//GEN-LAST:event_txtTimKiemCaretUpdate

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
        XExcel();
    }//GEN-LAST:event_btnExcelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi2;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSua2;
    private javax.swing.JButton btnThem2;
    private javax.swing.JButton btnXoa2;
    private javax.swing.JComboBox<String> cboHocKi;
    private javax.swing.JComboBox<String> cboKhoa;
    private javax.swing.JComboBox<String> cboMonHoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDiemSV;
    private javax.swing.JTextField txtDiemTB;
    private javax.swing.JTextField txtDiemThi;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHovaTen;
    private javax.swing.JTextField txtLop;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    KhoaDAO khoadao = new KhoaDAO();
    LopDAO lopdao = new LopDAO();
    MonHocDAO monhocdao = new MonHocDAO();
    KetQuaDAO kqdao = new KetQuaDAO();
    int row = 0;

    void init() {
        fillComboBoxKhoa();
        load();
//        fillComboBoxMaLop();
//        fillComboBoxMaMonHoc();

        if(Auth.isManager()){
            btnThem2.setEnabled(false);
            btnSua2.setEnabled(false);
            btnXoa2.setEnabled(false);
            btnMoi2.setEnabled(false);
        }
    }

    void fillComboBoxKhoa() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoa.getModel();
        model.removeAllElements();
        List<Khoa> list = khoadao.selectAll();
        for (Khoa k : list) {
            model.addElement(k);
        }
        this.fillComboBoxMonHoc();
//        this.fillComboBoxLop();
    }
    void fillComboBoxMonHoc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMonHoc.getModel();
        model.removeAllElements();
        Khoa khoa = (Khoa) cboKhoa.getSelectedItem();
        if (khoa != null) {
             List<MonHoc> list = monhocdao.selectByKhoaM(khoa.getMaKhoa());
            for (MonHoc mh : list) {
                model.addElement(mh);
            }
        }
    }
//    void fillComboBoxLop() {
//        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLop.getModel();
//        model.removeAllElements();
//        Lop lop = (Lop) cboKhoa.getSelectedItem();
//        if (lop != null) {
//            List<Lop> list = lopdao.selectByKhoaL(lop.getMaKhoa());
//            for (Lop l : list) {
//                model.addElement(l);
//            }
//        }
//    }
    void edit() {
        String model = (String) tblDiemSV.getValueAt(this.row, 0);
        KetQua kq = kqdao.selectById(model);
        this.setModel(kq);
        tabs.setSelectedIndex(0);
//        this.updateStatus();
    }

//    void updateStatus() {
//        boolean edit = this.row >= 0;
//        boolean first = this.row == 0;
//        boolean last = this.row == tblDiemSV.getRowCount() - 1;
////        txtMaLop.setEditable(!edit);
//        btnThem.setEnabled(!edit);
//        btnSua.setEnabled(edit);
//        btnXoa.setEnabled(edit);
//
//        btnFirst.setEnabled(edit && !first);
//        btnPrev.setEnabled(edit && !first);
//        btnNext.setEnabled(edit && !last);
//        btnLast.setEnabled(edit && !last);
//    }
//    void fillCombobox() {
//        Connection conn = null;
//        Statement state = null;
//        String url = "jdbc:sqlserver://localhost;databaseName=QLSV;user=sa;password=songlong";;
//
//        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMaKhoa.getModel();
//        model.removeAllElements();
//        try {
//            System.out.println("Connect to database.....");
//            conn = DriverManager.getConnection(url);
//            state = conn.createStatement();
//            String sql = "select Khoa.MaKhoa from Khoa";
//            ResultSet rs = state.executeQuery(sql);
//            while (rs.next()) {
//                cboMaKhoa.addItem(rs.getString("MaKhoa"));
//            }
//
//            rs.close();
//            state.close();
//            conn.close();
//        } catch (SQLException se) {
//            se.printStackTrace();
//        }
//    }
    void setModel(KetQua kq) {
        cboMonHoc.setSelectedItem(kq.getMaMH());
//        cboLop.setSelectedItem(kq.getMaLop());
        txtLop.setText(kq.getMaLop());
        cboHocKi.setSelectedItem(kq.getHocKi());
        txtMaSV.setText(kq.getMaSV());
        txtHovaTen.setText(kq.getHoTen());
        txtDiemThi.setText(kq.getDiemThi() + "");
        txtDiemTB.setText(kq.getDiemThi() + "");
//        txtXepLoai.setText(kq.getXepLoai());
        txtGhiChu.setText(kq.getGhiChu());
    }

    KetQua getModel() {
        KetQua kq = new KetQua();
        kq.setMaMH(cboMonHoc.getSelectedItem().toString());
//        kq.setHocKi(cboHocKi.getSelectedItem().toString());
        kq.setHocKi(Integer.parseInt((String) cboHocKi.getSelectedItem()));
        kq.setMaLop(txtLop.getText());
        kq.setMaSV(txtMaSV.getText());
        kq.setHoTen(txtHovaTen.getText());
        kq.setDiemThi(Float.parseFloat(txtDiemThi.getText()));
        kq.setDiemTB(Float.parseFloat(txtDiemTB.getText()));
//        kq.setXepLoai(txtXepLoai.getText());
        kq.setGhiChu(txtGhiChu.getText());
        return kq;
    }

    void clearfrom() {
        cboMonHoc.setSelectedIndex(0);
        txtLop.setText("");
        cboHocKi.setSelectedIndex(0);
        txtHovaTen.setText("");
        txtMaSV.setText("");
        txtDiemThi.setText("");
        txtDiemTB.setText("");
//        txtXepLoai.setText("");
        txtGhiChu.setText("");
        row = -1;
//        updateStatus();
    }

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblDiemSV.getModel();
        model.setRowCount(0);
        List<KetQua> list = kqdao.selectAll();
        for (KetQua kq : list) {
            Object[] row = {
                kq.getMaSV(),
                kq.getHoTen(),
                kq.getMaLop(),
                kq.getMaMH(),
                kq.getHocKi(),
                kq.getDiemThi(),
                kq.getDiemTB(),
//                kq.getXepLoai(),
                kq.getGhiChu(),};
            model.addRow(row);
        }
    }

    public void first() {
        row = 0;
        edit();
    }

    public void prev() {
        if (row > 0) {
            row--;
            edit();
        }
    }

    public void next() {
        if (row < tblDiemSV.getRowCount() - 1) {
            row++;
            edit();
        }
    }

    public void last() {
        row = tblDiemSV.getRowCount() - 1;
        edit();
    }

    void insert() {
        KetQua kq = getModel();
        if(checkform() && checkMasv()){
            try {
            kqdao.insert(kq);
            load();
            clearfrom();
            MsgBox.alert(this, "Đã thêm mới thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại");
            e.printStackTrace();
        }
        }      
    }

    void delete() {
        if (MsgBox.confirm(this, "Bạn thực sự muốn xóa khoa này?")) {
            String model = txtMaSV.getText();
            try {
                kqdao.delete(model);
                this.fillTable();
                this.clearfrom();
                MsgBox.alert(this, "Xóa thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa tht bại!");
                e.printStackTrace();
            }
        }
    }

    void update() {
        KetQua model = getModel();
        try {
            kqdao.update(model);
            fillTable();
            MsgBox.alert(this, "Cập nhật thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại");
            e.printStackTrace();
        }
    }

//    public void fillComboBoxMaLop() {
//        Connection conn = null;
//        Statement state = null;
//        String url ="jdbc:sqlserver://localhost;databaseName=QLSV;user=sa;password=songlong"; ;
//        
//        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLop.getModel();
//        model.removeAllElements();
//        try {
//            System.out.println("Connect to database.....");
//            conn = DriverManager.getConnection(url);
//            state = conn.createStatement();
//            String sql = "select Lop.MaLop from Lop";
//            ResultSet rs = state.executeQuery(sql);                
//            while (rs.next()) {
//                cboLop.addItem(rs.getString("MaLop"));
//            }
//            
//            rs.close();
//            state.close();
//            conn.close();
//        } catch (SQLException se) {
//            se.printStackTrace();
//        }
//    }
    public void fillComboBoxMaMonHoc() {
        Connection conn = null;
        Statement state = null;
        String url = "jdbc:sqlserver://localhost;databaseName=QLSV;user=sa;password=songlong";;

        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMonHoc.getModel();
        model.removeAllElements();
        try {
            System.out.println("Connect to database.....");
            conn = DriverManager.getConnection(url);
            state = conn.createStatement();
            String sql = "select MonHoc.MaMH from MonHoc";
            ResultSet rs = state.executeQuery(sql);
            while (rs.next()) {
                cboMonHoc.addItem(rs.getString("MaMH"));
            }

            rs.close();
            state.close();
            conn.close();
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }

    private void HienThi() {
        try {
            SinhVienDAO dao = new SinhVienDAO();
            SinhVien sv = dao.selectById(txtMaSV.getText());
            if (sv != null) {
                txtLop.setText(sv.getMaLop());
                txtHovaTen.setText(sv.getHoTen());
            }
        } catch (Exception e) {
        }
    }

    void XepLoai() {
        try {
            String diemThi = txtDiemThi.getText();
            String diemTB  = txtDiemTB.getText();
            
            int dt = Integer.parseInt(diemThi);
            int dtb = Integer.parseInt(diemTB);
            
            if(dt < 5){
                txtGhiChu.setText("Thi Lại");
            }else{
                txtGhiChu.setText("");
            }
            
//            if(dtb > 9 ){
//                txtXepLoai.setText("Xuat Sac");
//            }else if(dtb >= 8){
//                txtXepLoai.setText("Gioi");
//            }else if(dtb >= 6.5){
//                txtXepLoai.setText("Kha");
//            }else if(dtb > 5){
//                txtXepLoai.setText("Trung Binh");
//            }else{
//                txtXepLoai.setText("Yeu");
//            }
        } catch (Exception e) {
        }
    }

    private void timKiem() {
        load();
    }
    
    void XExcel(){KetQuaDAO dao = new KetQuaDAO();
        List<KetQua> list = dao.selectAll();
        try {
            XSSFWorkbook workBook = new XSSFWorkbook();
            XSSFSheet sheet = workBook.createSheet("DanhSachDiem");
            XSSFRow xRow = null;
            Cell cell = null;
            xRow = sheet.createRow(3);
            cell = xRow.createCell(0, CellType.STRING);
                cell.setCellValue("STT");
            
                
            cell = xRow.createCell(1, CellType.STRING);
            cell.setCellValue("Mã Sinh Viên");
                
            cell = xRow.createCell(2, CellType.STRING);
            cell.setCellValue("Họ Tên");

            cell = xRow.createCell(3, CellType.STRING);
            cell.setCellValue("Mã Lớp");

            cell = xRow.createCell(4, CellType.STRING);
            cell.setCellValue("Mã Môn Học");

            cell = xRow.createCell(5, CellType.STRING);
            cell.setCellValue("Học Kì");

            cell = xRow.createCell(6, CellType.STRING);
            cell.setCellValue("Điểm Thi");

            cell = xRow.createCell(7, CellType.STRING);
            cell.setCellValue("Điểm TB");
            
            cell = xRow.createCell(8, CellType.STRING);
            cell.setCellValue("Ghi Chú");

            for (int i = 0; i < list.size(); i++) {
                xRow = sheet.createRow(4 + i);

                cell = xRow.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = xRow.createCell(1, CellType.STRING);
                cell.setCellValue(list.get(i).getMaSV());

                cell = xRow.createCell(2, CellType.STRING);
                cell.setCellValue(list.get(i).getHoTen());

                cell = xRow.createCell(3, CellType.STRING);
                cell.setCellValue(list.get(i).getMaLop());

                cell = xRow.createCell(4, CellType.STRING);
                cell.setCellValue(list.get(i).getMaMH());

                cell = xRow.createCell(5, CellType.STRING);
                cell.setCellValue(list.get(i).getHocKi());
                
                cell = xRow.createCell(6, CellType.STRING);
                cell.setCellValue(list.get(i).getDiemThi());

                cell = xRow.createCell(7, CellType.STRING);
                cell.setCellValue(list.get(i).getDiemTB());
                
                cell = xRow.createCell(8, CellType.STRING);
                cell.setCellValue(list.get(i).getGhiChu());
                
                createHeaderRow(sheet);
                autoSizeColumns(workBook);
            }

            File f = new File("D://danhsachDiem.xlsx");
            try {
                FileOutputStream fis = new FileOutputStream(f);
                workBook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            MsgBox.alert(this, "Đã xuất file thành công!");
            
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Error: ");
        }};
    
    private void createHeaderRow(Sheet sheet) {
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        Font font = sheet.getWorkbook().createFont();
        font.setBold(true);
        font.setFontHeightInPoints((short) 13);
        short cl = 10;
        font.setColor(cl);
        cellStyle.setFont(font);

        Row row = sheet.getRow(3);
        Cell cellTitle1 = row.getCell(0);
        cellTitle1.setCellStyle(cellStyle);

        Cell cellTitle2 = row.getCell(1);
        cellTitle2.setCellStyle(cellStyle);

        Cell cellTitle3 = row.getCell(2);
        cellTitle3.setCellStyle(cellStyle);

        Cell cellTitle4 = row.getCell(3);
        cellTitle4.setCellStyle(cellStyle);

        Cell cellTitle5 = row.getCell(4);
        cellTitle5.setCellStyle(cellStyle);

        Cell cellTitle6 = row.getCell(5);
        cellTitle6.setCellStyle(cellStyle);

        Cell cellTitle7 = row.getCell(6);
        cellTitle7.setCellStyle(cellStyle);
	
	Cell cellTitle8 = row.getCell(7);
        cellTitle8.setCellStyle(cellStyle);

	Cell cellTitle9 = row.getCell(8);
        cellTitle9.setCellStyle(cellStyle);
    }
    
    public void autoSizeColumns(Workbook workbook) {
        int numberOfSheets = workbook.getNumberOfSheets();
        for (int i = 0; i < numberOfSheets; i++) {
            Sheet sheet = workbook.getSheetAt(i);
            if (sheet.getPhysicalNumberOfRows() > 0) {
                Row row = sheet.getRow(sheet.getFirstRowNum());
                Iterator<Cell> cellIterator = row.cellIterator();
                while (cellIterator.hasNext()) {
                    Cell cell = cellIterator.next();
                    int columnIndex = cell.getColumnIndex();
                    sheet.autoSizeColumn(columnIndex);
                    int currentColumnWidth = sheet.getColumnWidth(columnIndex);
                    sheet.setColumnWidth(columnIndex, (currentColumnWidth + 600));
                }
            }
        }
    }
    
    
    void load() {
        DefaultTableModel model = (DefaultTableModel) tblDiemSV.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtTimKiem.getText();
            List<KetQua> list = kqdao.selectByKeyword(keyword);
            for (KetQua kq : list) {
                Object[] row = {
                    kq.getMaSV(),
                    kq.getHoTen(),
                    kq.getMaLop(),
                    kq.getMaMH(),
                    kq.getHocKi(),
                    kq.getDiemThi(),
                    kq.getDiemTB(),
//                    kq.getXepLoai(),
                    kq.getGhiChu(),};
                model.addRow(row);
            };
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu người học!");
            e.printStackTrace();
        }
    }
    
    boolean checkform(){
        if(txtMaSV.getText().equals("")){
            MsgBox.alert(this, "Không được để trống mã sinh viên");
            return false;
        }if(txtDiemTB.getText().equals("")){
            MsgBox.alert(this, "Không được để trống điểm trung bình");
            return false;
        }if(txtDiemThi.getText().equals("") ){
            MsgBox.alert(this, "Không được để trống điểm thi");
            return false;
        }else{
            return true;
        }
    }
    
    boolean checkMasv() {
        List<KetQua> listkq = kqdao.selectAll();
        for (KetQua kq : listkq) {
            if (kq.getMaSV().equals(txtMaSV.getText())) {
                MsgBox.alert(this, "Mã sinh viên này đã tồn tại");
                return false;
            }
        }
        return true;
}
}
